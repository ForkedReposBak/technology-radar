[{"name":"Rust","x":126.06948029991759,"y":667.9260513090248,"summary":"# Mozilla 出品的无运行时语言\n\n\n## 学习资源\n\nhttps://github.com/kud1ing/awesome-rust\nhttps://github.com/carols10cents/rustlings\nhttps://wayslog.gitbooks.io/rustprimer/content/\n"},{"name":"Scala","x":217.74637514395818,"y":661.9297104701396,"summary":"\nScala 基于 JVM, 既可以当成 Java 的增强版, 也拥有函数式语言的特性.\n\n平台方面也有 spark 这样的大数据工具, 很有前途的语言.\n"},{"name":"Swift","x":236.49368828598188,"y":704.9115962865096,"summary":"\n非常年轻的语言, 开发 iOS 必备, 现在也支持 Android 的开发.\n"},{"name":"Docker","x":276.5269898684031,"y":386.796779611311,"summary":"# Docker\n\n容器的事实标准, 开发和测试环境可以大胆使用, 有效提升效率. \n"},{"name":"Elastic Search","x":491.4437599125456,"y":473.3393352395113,"summary":"\n# Elastic Search\n"},{"name":"Mongodb","x":288.04587371239836,"y":72.46527899672571,"summary":"\n# Mongodb\n\nNosql 数据库, 在实际使用中发现了非常多的坑, 不建议使用.\n"},{"name":"MySQL","x":415.62217470285174,"y":449.4115084361688,"summary":"\n# MySQL\n\n主流的关系型数据库, 以及增强版 percona-server\n"},{"name":"RabbitMQ","x":476.34041519680704,"y":487.9473063431816,"summary":"\n# RabbitMQ\n\n主流的消息队列中间件.\n"},{"name":"Redis","x":411.987145092412,"y":404.7493437968641,"summary":"\n# Redis\n\n主流的 key-value 数据库, 需要注意不要滥用, 很消耗内存.\n"},{"name":"SSDB","x":495.45370605375393,"y":466.5394310070302,"summary":"\n# SSDB\n\nkey-value 数据库, redis 的硬盘版\n"},{"name":"Chef","x":646.1142209974098,"y":143.52420618186983,"summary":"# Chef\n\n基础设施即代码, 随着 docker 的流行, 感觉有点边缘化\n"},{"name":"CQRS","x":813.6500560683403,"y":371.33826877244826,"summary":"# CQRS\n\n命令，查询职责分离，是一种架构思想。\n\nhttps://dzone.com/articles/divided-we-win-an-event-sourcing-cqrs-perspective\n"},{"name":"DDD","x":824.2770398558006,"y":249.96845103186496,"summary":"\n# Domain Drive Development\n\n领域驱动开发\n"},{"name":"Design Pattern","x":617.9575236285198,"y":443.1903795992346,"summary":"\n# 设计模式\n"},{"name":"Event Sourcing","x":718.7802962164084,"y":153.84602094903806,"summary":"\n# Event Sourcing\n"},{"name":"functional","x":660.0400401600762,"y":265.61999859523866,"summary":"\n# 函数式编程\n"},{"name":"micro service","x":624.5200449537222,"y":218.87526133220348,"summary":"\n# micro service\n"},{"name":"node.js","x":754.5799339305995,"y":393.68586088989304,"summary":"\n# nodejs\n"},{"name":"object-oriented","x":549.3409331773655,"y":497.6661587185487,"summary":"\n# 面向对象\n"},{"name":"restful","x":551.6261241105997,"y":422.99826804030073,"summary":"\n# RESTful\n\nAPI 设计参考文献列表，可帮助你更加彻底的了解REST风格的接口设计。\nhttps://github.com/aisuhua/restful-api-design-references\n"},{"name":"atom","x":535.9772158296294,"y":539.5826315835251,"summary":"\n# GitHub 出品的开源编辑器\n\nGitHub 出品的代码编辑器，类似 sublime，拥有众多的插件支持。\n\n常用插件\n\n各类语言包的语法高亮之类的就不介绍了\n\n## https://atom.io/packages/tree-view-git-modified\n\n在树形菜单显示git上被修改过的文件。\n\n## https://atom.io/packages/sync-settings\n\n同步你的 atom 配置到 gist（需要提供一个 github 的 token，奇怪的是不翻墙也能用）\n\n## https://atom.io/packages/symbols-tree-view\n\n在编辑器右侧显示方法定义的大纲\n\n## https://atom.io/packages/pigments\n\n直观的显示代码里的rgb之类的颜色。\n\n## https://atom.io/packages/keyboard-sounds\n\n敲击键盘时发出声音，很有节奏感\n\n## https://atom.io/packages/graphviz-preview\n\n预览你的 dot 文件\n\n## https://atom.io/packages/git-time-machine\n\n实现类似 osx 的 time machine 功能，查看单个文件的 git 历史特别好用。\n\n## https://atom.io/packages/expose\n\n把你打开的文件列出来，方便查找\n\n## https://atom.io/packages/editorconfig\n\n用于读取项目中的 .editor 配置，统一代码格式。\n\n## https://atom.io/packages/auto-update-packages\n\n顾名思义\n\n## https://atom.io/packages/api-blueprint-preview\n\n顾名思义\n\n## https://atom.io/packages/activate-power-mode\n\n屌炸天的爆炸效果\n\n## https://atom.io/packages/Zen\n\n写文章时的沉浸模式\n\n## https://atom.io/packages/Sublime-Style-Column-Selection\n\n列编辑模式\n"},{"name":"chrome","x":626.5015209690205,"y":626.5015209690205,"summary":"\n# 谷歌出品的浏览器\n\nGoogle 出品的现代浏览器，众多插件和方便的调试工具让开发更有效率。\n\n常用插件:\n\n## 印象笔记\n\n一键将网页保存到印象笔记中\n\n## transit\n\n划词翻译，看英文文档时很好用\n\n## pocket\n\n一键保存到 pocket，非常好用\n\n## zenhub\n\n给 github 网页版增强了一些功能\n\n## sidenotes\n\n阅读网页时可以随时记笔记（使用 dropbox 同步，注意科学使用）\n"},{"name":"mitmproxy","x":729.5843896352103,"y":771.3069780401802,"summary":"\n# mitmproxy\n\n一个命令行的 HTTP 调试监控工具\n\n一般 Mac 下常用的同类工具是 Charles, 不过 Charles 是收费软件, 而且命令行的应用启动更快, 也能在 linux 上使用.\n\n基本用法 `mitmproxy -p 8080` , 这样就是你本机的8080端口建立了一个代理.\n\n接着在手机上, 配置网络代理, ip 是你开发机的 ip, 端口就是上面配置的 8080\n\n查看帮助可以在 mitmproxy 界面中输入 `?`, 一般我们只是查一下 HTTP 的 request 和 response, 最基本的功能就够用了.\n"},{"name":"stow","x":759.6183826787413,"y":734.9565932064288,"summary":"\n# [stow]\n\ndotfile 的配置工具，可以把 home 目录下的 dotfile 统一起来管理，配合 git(hub) 很好用。\n"},{"name":"zsh","x":667.6572445705758,"y":605.5283083288006,"summary":"\n# zsh\n\n号称 \"终极 shell\" 的强大 shell, 是 bash 的替代品. 在开发环境中建议配置. 使用 zsh 一定要配合强大的各类插件使用.\n\n作为用户, 一开始并没有必要所有配置都自己重新来过. 完全可以去使用别人的配置或者使用相关框架.\n\n参考资料 <http://www.jianshu.com/p/18c3e2749caf>\n\n## 常用插件\n\n### autojump\n\n`j bingo`\n\n### tmux (tmuxinator)\n\nterminal multiplexer，tmux 可以让你在一个屏幕中管理多个终端窗口。\n\n### tldr\n\n`tldr tar`\n"}]
