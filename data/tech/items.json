[{"name":"Rust","x":174.94536634845542,"y":775.3359406194393,"summary":"# Mozilla 出品的无运行时语言\n\n\n## 学习资源\n\nhttps://github.com/kud1ing/awesome-rust\nhttps://github.com/carols10cents/rustlings\nhttps://wayslog.gitbooks.io/rustprimer/content/\n"},{"name":"Scala","x":259.441843315199,"y":619.2045771410174,"summary":"\nScala 基于 JVM, 既可以当成 Java 的增强版, 也拥有函数式语言的特性.\n\n平台方面也有 spark 这样的大数据工具, 很有前途的语言.\n"},{"name":"Swift","x":258.4575352284027,"y":641.1863383286734,"summary":"\n非常年轻的语言, 开发 iOS 必备, 现在也支持 Android 的开发.\n"},{"name":"Docker","x":377.52093567158033,"y":223.60871588405388,"summary":"\n# Docker\n\n容器的事实标准, 开发和测试环境可以大胆使用, 有效提升效率.\n"},{"name":"Elastic Search","x":380.1025266766081,"y":444.7948806177193,"summary":"\n# Elastic Search\n"},{"name":"Mongodb","x":280.41214714305414,"y":76.44659607920988,"summary":"\n# Mongodb\n\nNosql 数据库, 在实际使用中发现了非常多的坑, 不建议使用.\n"},{"name":"MySQL","x":398.2783660383797,"y":435.2937893436502,"summary":"\n# MySQL\n\n主流的关系型数据库, 以及增强版 percona-server\n"},{"name":"RabbitMQ","x":454.37159635462535,"y":468.5738830320693,"summary":"\n# RabbitMQ\n\n主流的消息队列中间件.\n"},{"name":"Redis","x":439.2927673317814,"y":448.7965668981989,"summary":"\n# Redis\n\n主流的 key-value 数据库, 需要注意不要滥用, 很消耗内存.\n"},{"name":"SSDB","x":490.97102784574224,"y":493.06542842487966,"summary":"\n# SSDB\n\nkey-value 数据库, redis 的硬盘版\n"},{"name":"Chef","x":905.0594692935034,"y":361.11860610811664,"summary":"\n# Chef\n\n基础设施即代码, 随着 docker 的流行, 感觉有点边缘化\n"},{"name":"CQRS","x":717.0998554860348,"y":388.7635738701979,"summary":"\n# CQRS\n\n命令，查询职责分离，是一种架构思想。\n\nhttps://dzone.com/articles/divided-we-win-an-event-sourcing-cqrs-perspective\n"},{"name":"DDD","x":800.1906898892627,"y":223.80931011073733,"summary":"\n# Domain Drive Development\n\n领域驱动开发\n"},{"name":"Design Pattern","x":573.6857050883318,"y":456.4579416631022,"summary":"\n# 设计模式\n\n对设计模式的学习是程序员进阶的必经之路\n"},{"name":"Event Sourcing","x":686.7688352082091,"y":119.46276918995687,"summary":"\n# Event Sourcing\n"},{"name":"functional","x":649.6535660645591,"y":216.80097494173327,"summary":"\n# 函数式编程\n\n当前挺火的一个词，学习函数式编程可以从另一个角度看待编程。\n"},{"name":"micro service","x":665.2973607146976,"y":266.67294043740844,"summary":"\n# micro service\n"},{"name":"object-oriented","x":617.8643029364532,"y":371.5133249937254,"summary":"\n# 面向对象编程\n\n相对于函数式编程，当前主流的编程思想，可是大多数的资料都停留在表面。\n\n面向对象在可以预见的将来都将是一种主流的编程思想。\n"},{"name":"restful","x":619.9837666169076,"y":459.33279798484375,"summary":"\n# RESTful\n\nAPI 设计参考文献列表，可帮助你更加彻底的了解REST风格的接口设计。\nhttps://github.com/aisuhua/restful-api-design-references\n"},{"name":"atom","x":557.7129894802927,"y":550.3577526129245,"summary":"\n# GitHub 出品的开源编辑器\n\nGitHub 出品的代码编辑器，类似 sublime，拥有众多的插件支持。\n\n常用插件\n\n各类语言包的语法高亮之类的就不介绍了\n\n## https://atom.io/packages/tree-view-git-modified\n\n在树形菜单显示git上被修改过的文件。\n\n## https://atom.io/packages/sync-settings\n\n同步你的 atom 配置到 gist（需要提供一个 github 的 token，奇怪的是不翻墙也能用）\n\n## https://atom.io/packages/symbols-tree-view\n\n在编辑器右侧显示方法定义的大纲\n\n## https://atom.io/packages/pigments\n\n直观的显示代码里的rgb之类的颜色。\n\n## https://atom.io/packages/keyboard-sounds\n\n敲击键盘时发出声音，很有节奏感\n\n## https://atom.io/packages/graphviz-preview\n\n预览你的 dot 文件\n\n## https://atom.io/packages/git-time-machine\n\n实现类似 osx 的 time machine 功能，查看单个文件的 git 历史特别好用。\n\n## https://atom.io/packages/expose\n\n把你打开的文件列出来，方便查找\n\n## https://atom.io/packages/editorconfig\n\n用于读取项目中的 .editor 配置，统一代码格式。\n\n## https://atom.io/packages/auto-update-packages\n\n顾名思义\n\n## https://atom.io/packages/api-blueprint-preview\n\n顾名思义\n\n## https://atom.io/packages/activate-power-mode\n\n屌炸天的爆炸效果\n\n## https://atom.io/packages/Zen\n\n写文章时的沉浸模式\n\n## https://atom.io/packages/Sublime-Style-Column-Selection\n\n列编辑模式\n"},{"name":"chrome","x":613.2295850088831,"y":646.3361965808213,"summary":"\n# 谷歌出品的浏览器\n\nGoogle 出品的现代浏览器，众多插件和方便的调试工具让开发更有效率。\n\n常用插件:\n\n## 印象笔记\n\n一键将网页保存到印象笔记中\n\n## transit\n\n划词翻译，看英文文档时很好用\n\n## pocket\n\n一键保存到 pocket，非常好用\n\n## zenhub\n\n给 github 网页版增强了一些功能\n\n## sidenotes\n\n阅读网页时可以随时记笔记（使用 dropbox 同步，注意科学使用）\n"},{"name":"mitmproxy","x":611.23194898293,"y":595.2654917925793,"summary":"\n# mitmproxy\n\n一个命令行的 HTTP 调试监控工具\n\n一般 Mac 下常用的同类工具是 Charles, 不过 Charles 是收费软件, 而且命令行的应用启动更快, 也能在 linux 上使用.\n\n基本用法 `mitmproxy -p 8080` , 这样就是你本机的8080端口建立了一个代理.\n\n接着在手机上, 配置网络代理, ip 是你开发机的 ip, 端口就是上面配置的 8080\n\n查看帮助可以在 mitmproxy 界面中输入 `?`, 一般我们只是查一下 HTTP 的 request 和 response, 最基本的功能就够用了.\n"},{"name":"stow","x":688.5048942194949,"y":746.229905864639,"summary":"\n# [stow]\n\ndotfile 的配置工具，可以把 home 目录下的 dotfile 统一起来管理，配合 git(hub) 很好用。\n"},{"name":"zsh","x":600.6430769542853,"y":665.53431302406,"summary":"\n# zsh\n\n号称 \"终极 shell\" 的强大 shell, 是 bash 的替代品. 在开发环境中建议配置. 使用 zsh 一定要配合强大的各类插件使用.\n\n作为用户, 一开始并没有必要所有配置都自己重新来过. 完全可以去使用别人的配置或者使用相关框架.\n\n参考资料 <http://www.jianshu.com/p/18c3e2749caf>\n\n## 常用插件\n\n### autojump\n\n`j bingo`\n\n### tmux (tmuxinator)\n\nterminal multiplexer，tmux 可以让你在一个屏幕中管理多个终端窗口。\n\n### tldr\n\n`tldr tar`\n"}]
