[{"name":"Rust","x":182.06248343567665,"y":798.8103074573878,"summary":"# Mozilla 出品的无运行时语言\n\n\n## 学习资源\n\nhttps://github.com/kud1ing/awesome-rust\nhttps://github.com/carols10cents/rustlings\nhttps://wayslog.gitbooks.io/rustprimer/content/\n"},{"name":"Scala","x":236.41308362518538,"y":697.8857222251542,"summary":"\nScala 基于 JVM, 既可以当成 Java 的增强版, 也拥有函数式语言的特性.\n\n平台方面也有 spark 这样的大数据工具, 很有前途的语言.\n"},{"name":"Docker","x":408.42697551020836,"y":255.64776871675264,"summary":"# Docker\n\n容器的事实标准, 开发和测试环境可以大胆使用, 有效提升效率. \n"},{"name":"Elastic Search","x":473.86943104001955,"y":417.623530053869,"summary":"\n# Elastic Search\n"},{"name":"Swift","x":298.211243308044,"y":718.4534025173826,"summary":"\n非常年轻的语言, 开发 iOS 必备, 现在也支持 Android 的开发.\n"},{"name":"Mongodb","x":229.13302651681977,"y":108.02409564682159,"summary":"\n# Mongodb\n\nNosql 数据库, 在实际使用中发现了非常多的坑, 不建议使用.\n"},{"name":"MySQL","x":441.7250715180162,"y":433.9517849491823,"summary":"\n# MySQL\n\n主流的关系型数据库, 以及增强版 percona-server\n"},{"name":"RabbitMQ","x":443.71416962878885,"y":436.1609022042295,"summary":"\n# RabbitMQ\n\n主流的消息队列中间件.\n"},{"name":"Redis","x":477.23355665450435,"y":490.2755150785078,"summary":"\n# Redis\n\n主流的 key-value 数据库, 需要注意不要滥用, 很消耗内存.\n"},{"name":"SSDB","x":424.5457357847789,"y":372.0439212645025,"summary":"\n# SSDB\n\nkey-value 数据库, redis 的硬盘版\n"},{"name":"Chef","x":769.0545683326222,"y":205.6542946968437,"summary":"# Chef\n\n基础设施即代码, 随着 docker 的流行, 感觉有点边缘化\n"},{"name":"DDD","x":852.8553202580116,"y":315.20708909432096,"summary":"\n# Domain Drive Development\n\n领域驱动开发\n"},{"name":"Design Pattern","x":607.0504842987592,"y":423.3639894467161,"summary":"\n# 设计模式\n"},{"name":"CQRS","x":634.2516995760409,"y":249.83038421512487,"summary":"# CQRS\n\n命令，查询职责分离，是一种架构思想。\n\nhttps://dzone.com/articles/divided-we-win-an-event-sourcing-cqrs-perspective\n"},{"name":"Event Sourcing","x":817.2455671103481,"y":206.75443288965192,"summary":"\n# Event Sourcing\n"},{"name":"functional","x":730.3231576374317,"y":269.5275688508418,"summary":"\n# 函数式编程\n"},{"name":"node.js","x":737.7841569012727,"y":365.3740540846154,"summary":"\n# nodejs\n"},{"name":"micro service","x":676.0519695620092,"y":249.46196855272518,"summary":"\n# micro service\n"},{"name":"object-oriented","x":596.2865871500525,"y":479.6454105572166,"summary":"\n# 面向对象\n"},{"name":"restful","x":538.704554448589,"y":452.02058867774184,"summary":"\n# RESTful\n\nAPI 设计参考文献列表，可帮助你更加彻底的了解REST风格的接口设计。\nhttps://github.com/aisuhua/restful-api-design-references\n"},{"name":"atom","x":530.9074043232688,"y":535.3486998362631,"summary":"\n# GitHub 出品的开源编辑器\n\nGitHub 出品的代码编辑器，类似 sublime，拥有众多的插件支持。\n\n常用插件\n\n各类语言包的语法高亮之类的就不介绍了\n\n## https://atom.io/packages/tree-view-git-modified\n\n在树形菜单显示git上被修改过的文件。\n\n## https://atom.io/packages/sync-settings\n\n同步你的 atom 配置到 gist（需要提供一个 github 的 token，奇怪的是不翻墙也能用）\n\n## https://atom.io/packages/symbols-tree-view\n\n在编辑器右侧显示方法定义的大纲\n\n## https://atom.io/packages/pigments\n\n直观的显示代码里的rgb之类的颜色。\n\n## https://atom.io/packages/keyboard-sounds\n\n敲击键盘时发出声音，很有节奏感\n\n## https://atom.io/packages/graphviz-preview\n\n预览你的 dot 文件\n\n## https://atom.io/packages/git-time-machine\n\n实现类似 osx 的 time machine 功能，查看单个文件的 git 历史特别好用。\n\n## https://atom.io/packages/expose\n\n把你打开的文件列出来，方便查找\n\n## https://atom.io/packages/editorconfig\n\n用于读取项目中的 .editor 配置，统一代码格式。\n\n## https://atom.io/packages/auto-update-packages\n\n顾名思义\n\n## https://atom.io/packages/api-blueprint-preview\n\n顾名思义\n\n## https://atom.io/packages/activate-power-mode\n\n屌炸天的爆炸效果\n\n## https://atom.io/packages/Zen\n\n写文章时的沉浸模式\n\n## https://atom.io/packages/Sublime-Style-Column-Selection\n\n列编辑模式\n"},{"name":"mitmproxy","x":674.291636616985,"y":793.0973602641237,"summary":"\n# mitmproxy\n\n一个命令行的 HTTP 调试监控工具\n\n一般 Mac 下常用的同类工具是 Charles, 不过 Charles 是收费软件, 而且命令行的应用启动更快, 也能在 linux 上使用.\n\n基本用法 `mitmproxy -p 8080` , 这样就是你本机的8080端口建立了一个代理.\n\n接着在手机上, 配置网络代理, ip 是你开发机的 ip, 端口就是上面配置的 8080\n\n查看帮助可以在 mitmproxy 界面中输入 `?`, 一般我们只是查一下 HTTP 的 request 和 response, 最基本的功能就够用了.\n"},{"name":"stow","x":730.9116109143797,"y":723.4004853349502,"summary":"\n# [stow]\n\ndotfile 的配置工具，可以把 home 目录下的 dotfile 统一起来管理，配合 git(hub) 很好用。\n"},{"name":"chrome","x":656.6406678948418,"y":605.9307480160697,"summary":"\n# 谷歌出品的浏览器\n\nGoogle 出品的现代浏览器，众多插件和方便的调试工具让开发更有效率。\n\n常用插件:\n\n## 印象笔记\n\n一键将网页保存到印象笔记中\n\n## transit\n\n划词翻译，看英文文档时很好用\n\n## pocket\n\n一键保存到 pocket，非常好用\n\n## zenhub\n\n给 github 网页版增强了一些功能\n\n## sidenotes\n\n阅读网页时可以随时记笔记（使用 dropbox 同步，注意科学使用）\n"},{"name":"zsh","x":591.6696002021222,"y":655.7277634080103,"summary":"\n# zsh\n\n号称 \"终极 shell\" 的强大 shell, 是 bash 的替代品. 在开发环境中建议配置. 使用 zsh 一定要配合强大的各类插件使用.\n\n作为用户, 一开始并没有必要所有配置都自己重新来过. 完全可以去使用别人的配置或者使用相关框架.\n\n参考资料 <http://www.jianshu.com/p/18c3e2749caf>\n\n## 常用插件\n\n### autojump\n\n`j bingo`\n\n### tmux (tmuxinator)\n\nterminal multiplexer，tmux 可以让你在一个屏幕中管理多个终端窗口。\n\n### tldr\n\n`tldr tar`\n"}]
